const f={feeding_problems:["drool","gag","choke","spit","refuse food","picky eater","mouth breathing","tongue thrust","open mouth posture"],behavior_problems:["tantrum","aggressive","hit","bite","destructive","defiant","meltdown","scream","refuse","resist","avoid","fearful","anxious","withdrawn","isolated","repetitive behavior"],motor_problems:["clumsy","fall","trip","stumble","poor balance","awkward","difficulty with","cannot","unable to","struggles with","avoids physical","tires easily","weak grip","drops things"],sensory_problems:["sensitive to","bothered by","covers ears","avoids textures","dislikes being touched","overwhelmed by","distressed by","seeks excessive","craves movement","constantly moving"],health_problems:["bedwetting","accident","constipation","illness","infection","allergy","seizure","headache","pain","discomfort"],sleep_problems:["difficulty falling asleep","wakes frequently","nightmares","night terrors","sleepwalks","restless sleep","snoring"],learning_problems:["difficulty learning","behind peers","delayed","slow to","trouble with","confused by","forgets","loses focus"]},g={achievements:["can your child","does your child","is your child able to","has your child learned","does your child know how"],skills:["independently","without help","on their own","successfully","consistently","easily","confidently"],social_positive:["make friends","play cooperatively","share","take turns","show empathy","help others","follow rules"]};function h(s,e){const t=s.toLowerCase(),a=Object.values(f).some(o=>o.some(n=>t.includes(n))),i=Object.values(g).some(o=>o.some(n=>t.includes(n)));if(a&&!i){if(e==="No")return 1;if(e==="Sometimes")return .3;if(e==="Yes")return 0}else{if(e==="Yes")return 1;if(e==="Sometimes")return .5;if(e==="No")return 0}return 0}function y(s){const e=s.toLowerCase();for(const[t,a]of Object.entries(f))if(a.some(i=>e.includes(i)))return{type:"reverse",category:t,interpretation:"Lower scores are better (Yes indicates a problem)"};for(const[t,a]of Object.entries(g))if(a.some(i=>e.includes(i)))return{type:"positive",category:t,interpretation:"Higher scores are better (Yes indicates achievement)"};return{type:"positive",category:"general",interpretation:"Higher scores are better"}}function S(s,e){const t={categoryScores:{},reflexIndicators:{},redFlags:[],strengths:[],detailedScores:{}};return Object.entries(e).forEach(([a,i])=>{let o=0,n=0,l=[],c=[];i.forEach(r=>{const d=s[r.id];if(!d)return;const u=y(r.question_text),m=h(r.question_text,d);o+=m,n+=1,u.type==="reverse"&&d==="Yes"?(c.push({question:r.question_text,category:u.category,severity:"high"}),t.redFlags.push({category:a,issue:r.question_text,response:d})):u.type==="positive"&&d==="Yes"&&l.push({skill:r.question_text,category:a}),t.detailedScores[r.id]={question:r.question_text,response:d,score:m,type:u.type,interpretation:u.interpretation}});const p=n>0?Math.round(o/n*100):0;t.categoryScores[a]={percentage:p,rawScore:o,maxScore:n,concerns:c,strengths:l,interpretation:b(p,c.length)},p>=70&&c.length===0&&t.strengths.push({category:a,score:p,achievements:l})}),t}function b(s,e){return e>=3?"Significant concerns requiring immediate attention":e>=1?"Some red flags present - professional evaluation recommended":s>=80?"Excellent development - well above age expectations":s>=70?"On track - age-appropriate development":s>=50?"Emerging skills - monitor and support development":"Needs support - consider professional evaluation"}function k(s,e){const t={moro:{name:"Moro Reflex",indicators:[],retentionScore:0,maxScore:0},palmar:{name:"Palmar Grasp Reflex",indicators:[],retentionScore:0,maxScore:0},atnr:{name:"ATNR (Asymmetrical Tonic Neck Reflex)",indicators:[],retentionScore:0,maxScore:0},spinalGalant:{name:"Spinal Galant Reflex",indicators:[],retentionScore:0,maxScore:0},tlr:{name:"TLR (Tonic Labyrinthine Reflex)",indicators:[],retentionScore:0,maxScore:0},stnr:{name:"STNR (Symmetrical Tonic Neck Reflex)",indicators:[],retentionScore:0,maxScore:0},rooting:{name:"Rooting Reflex",indicators:[],retentionScore:0,maxScore:0},babinski:{name:"Babinski Reflex",indicators:[],retentionScore:0,maxScore:0}},a={moro:["startle easily","anxious","motion sickness","poor balance","difficulty with loud noises","emotional outbursts","hypervigilant","difficulty with transitions","light sensitive","easily overwhelmed"],palmar:["poor pencil grip","messy handwriting","difficulty with utensils","drops things","weak grip","difficulty with buttons","poor fine motor"],atnr:["difficulty crossing midline","poor handwriting","reading difficulties","loses place when reading","poor bilateral coordination","one-sided dominance issues"],spinalGalant:["fidgety","can't sit still","bedwetting","hip rotation when walking","sensitive to waistbands","poor concentration when sitting","restless"],tlr:["poor posture","slumps when sitting","W-sitting","motion sickness","poor balance","difficulty with stairs","fear of heights","gravitational insecurity"],stnr:["poor posture when writing","difficulty copying from board","skips crawling","W-sitting","difficulty swimming","poor hand-eye coordination"],rooting:["messy eating","drooling","thumb sucking beyond age 5","oral fixation","difficulty with speech sounds","tongue thrust"],babinski:["toe walking","poor balance","delayed walking","unusual gait","difficulty with shoes","sensitive feet"]};Object.entries(e).forEach(([o,n])=>{n.forEach(l=>{const c=s[l.id];if(!c)return;const p=l.question_text.toLowerCase();Object.entries(a).forEach(([r,d])=>{d.some(m=>p.includes(m))&&(t[r].maxScore+=1,c==="Yes"?(t[r].retentionScore+=1,t[r].indicators.push({question:l.question_text,response:c,category:o,severity:"high"})):c==="Sometimes"&&(t[r].retentionScore+=.5,t[r].indicators.push({question:l.question_text,response:c,category:o,severity:"moderate"})))})})});const i={summary:"",reflexes:[],priorityReflexes:[],interventionPlan:{}};return Object.entries(t).forEach(([o,n])=>{if(n.maxScore>0){const l=Math.round(n.retentionScore/n.maxScore*100);if(l>0){const c={name:n.name,retentionLevel:l,indicators:n.indicators,impact:w(o,l),exercises:x(o),category:v(o)};i.reflexes.push(c),l>=50&&i.priorityReflexes.push(o)}}}),i.reflexes.sort((o,n)=>n.retentionLevel-o.retentionLevel),i.priorityReflexes.length===0?i.summary="Excellent! No significant primitive reflex retention detected.":i.priorityReflexes.length<=2?i.summary=`Mild reflex retention detected in ${i.priorityReflexes.join(" and ")}. Targeted exercises recommended.`:i.summary="Multiple retained reflexes detected. Comprehensive integration program strongly recommended.",i}function w(s,e){const t={moro:"Affects emotional regulation, anxiety levels, and sensory processing",palmar:"Impacts fine motor skills, handwriting, and hand strength",atnr:"Affects reading, writing, and bilateral coordination",spinalGalant:"Impacts attention, bladder control, and ability to sit still",tlr:"Affects posture, balance, and spatial awareness",stnr:"Impacts posture during desk work and visual tracking",rooting:"Affects oral motor skills and speech development",babinski:"Impacts walking patterns and foot sensitivity"};return`${e>=70?"Significantly":e>=40?"Moderately":"Mildly"} ${t[s]||"affects development"}`}function x(s){return{moro:["Starfish exercise - spread limbs wide then bring together","Deep pressure hugs - firm, calming pressure","Rocking in fetal position","Breathing exercises with arm movements","Progressive muscle relaxation"],palmar:["Squeeze and release stress balls","Playdough manipulation","Hanging from monkey bars","Finger opposition exercises","Hand massage with different textures"],atnr:["Cross-crawl exercises","Figure-8 drawing with both hands","Lazy-8 eye tracking","Sword play crossing midline","Ball throwing across body"],spinalGalant:["Snow angels on back","Log rolling","Back brushing technique","Cat-cow yoga poses","Swimming backstroke movements"],tlr:["Superman pose on stomach","Airplane flying position","Rocking on hands and knees","Balance board activities","Vestibular swinging"],stnr:["Cat-cow stretches","Wheelbarrow walking","Bear crawl","Prone extension holds","Table top position holds"]}[s]||["Consult with occupational therapist"]}function v(s){return{moro:"Emotional/Sensory",palmar:"Fine Motor",atnr:"Academic/Coordination",spinalGalant:"Attention/Bladder",tlr:"Balance/Posture",stnr:"Posture/Visual",rooting:"Oral/Speech",babinski:"Gait/Walking"}[s]||"General"}export{S as analyzeResponsesWithSmartScoring,h as calculateSmartScore,y as identifyQuestionType,k as mapResponsesToReflexesWithSmartScoring};
